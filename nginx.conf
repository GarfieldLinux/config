#user  nobody;
worker_processes  2;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  logs/access.log  main;
    error_log   logs/debug.log   debug;

    sendfile        on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
    keepalive_timeout  65;
    #gzip  on;
     proxy_ignore_headers "Cache-Control";
     proxy_ignore_headers "Expires";
     proxy_ignore_headers "X-Accel-Buffering";
     proxy_hide_header    "Cache-Control";
     proxy_hide_header    "Expires";
 
     proxy_cache_path /cache01 levels=1:2:2 keys_zone=Cache01:100m inactive=300m max_size=1000m;
     proxy_cache_path /cache02 levels=1:2:2 keys_zone=Cache02:100m inactive=300m max_size=1000m;
     proxy_cache_path /cache03 levels=1:2:2 keys_zone=Cache03:100m inactive=300m max_size=1000m;

       #inactive=5m  5min 清除cache的文件
       #keys_zone 每个cache使用的内存缓存 
       #max_size 每个cache 可用的最大缓存空间
       #proxy_cache_path 缓存的目录 可以每个目录指定为一块物理硬盘
       #levels hash后 目录字节数  你能使用1和2的任何组合来表示level的格式:X, X:X, or X:X:X e.g.: "2", "2:2", "1:1:2".最多3层
       #


     upstream backend {
         server 192.168.10.139:80;
     }
 
     add_header X-Cache "$upstream_cache_status from VM-TEST-NT-140";

     server {
        listen       80;
        server_name  nt-test-140;
        
        location ~/purge01(/.*) {
           allow all;
           #允许的IP
           #allow 127.0.0.1;
           #10网段的都可以访问
           allow 192.168.10.0/24;
           #deny  all;
           error_page 405 =200 /purge$1;
           proxy_cache_purge Cache01 $1;
        }
  	location ~/purge02(/.*) {
           allow all;
           #deny  all;
           error_page 405 =200 /purge02$1;
           proxy_cache_purge Cache02 $1;
        }

  	location ~/purge03(/.*) {
           allow all;
           #deny  all;
           error_page 405 =200 /purge03$1;
           proxy_cache_purge Cache03 $1;
        }



        location  /1/ {
             flv;
             mp4;
             limit_rate_after 1m;    ####在flv文件下载了1M以后开始限速
             limit_rate 40000k;      ####限速速率 
             proxy_cache_lock on;
             proxy_cache_lock_timeout 5s;
             proxy_cache Cache01;
             proxy_temp_path /cache01/temp_cache/;
             #proxy_cache_key  $uri$is_args$args;
             proxy_cache_key  $uri;
             proxy_cache_valid 200 206 1h;
             proxy_cache_valid any 1m;
             proxy_set_header Via  "Dnion Cache01 - Nt-Test -140";
             proxy_set_header X-Forwarded-For $remote_addr;
             proxy_pass http://backend;
              if ( $request_method = PURGE ) {
            rewrite ^(.*)$ /purge01$1 last;
        }
        }

        location  /2/ {
             mp4;
             limit_rate 40000k;
             proxy_cache_lock on;
             proxy_cache_lock_timeout 5s;
             proxy_cache Cache02;
             proxy_temp_path /cache02/temp_cache/;
             #proxy_cache_key  $uri$is_args$args;
             proxy_cache_key  $uri;
             proxy_cache_valid 200 206 1h;
             proxy_cache_valid any 1m;
             proxy_set_header HOST $1;
             proxy_set_header Via  "Dnion Cache02 - Nt-Test -140";
             proxy_set_header X-Forwarded-For $remote_addr;
             proxy_pass http://backend;
              if ( $request_method = PURGE ) {
            rewrite ^(.*)$ /purge02$1 last;
        }
        }

        location  /3/ {
             limit_rate 40000k;
             proxy_cache_lock on;
             proxy_cache_lock_timeout 5s;
             proxy_cache Cache03;
             proxy_temp_path /cache03/temp_cache/;
             #proxy_cache_key  $uri$is_args$args;
             proxy_cache_key  $uri;
             proxy_cache_valid 200 206 1h;
             proxy_cache_valid any 1m;
             proxy_set_header HOST $1;
             proxy_set_header Via  "Dnion Cache03 - Nt-Test -140";
             proxy_set_header X-Forwarded-For $remote_addr;
             proxy_pass http://backend;
              if ( $request_method = PURGE ) {
            rewrite ^(.*)$ /purge03$1 last;
        }
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
