#show  port information 
netstat -nutlp | grep 8080 
lsof  -i:65530
#show all ports information 
netstat -nutlp
#find the large file 
find . -type f -size +1000000k 
#ssh 443 port forward 
 ssh -o ServerAliveInterval=60 -i ./pem_file.pem -p 4222 pxie@vmw-sz.gopivotal.com -L 443:10.110.112.216:443 

#踢出已经登陆的用户
pkill -kill -t pts/0


#ffmpeg
ffmpeg -i /var/www/html/19uK7fc_1432122398387_75r8hLB_2.mp4  2>&1 | grep Duration | cut -d ' ' -f 4 | sed s/,//

#vimrc 
#
#显示行号
set number
#显示当前编辑的文件名  
highlight StatusLine cterm=bold ctermfg=yellow ctermbg=blue
#以只读模式打开文件file.c 并且光标停留在指定12行 
vim  +12  -M file.c 
#查找
n 查找下一个
N 查找上一个
#以二进制的方式查看一个文件
vim -b file
# xxd 把这个文件转换成十六进制
:%!xxd
#Vim 把这些信息当作普通文本来对待。
#修改了十六进制部分并不导致可显示字符部分的改变，反之亦然。
# 最后，用下面的命令把它转换回来:
:%!xxd -r
#只有十六进制部分的修改才会被采用。右边可显示文本部分的修改忽略不计。

#每行行首添加A
ESC 进入普通模式，然后
:%s/^/A/
 或者 :1,$s/^M//g 均可
补充一点：
^M是使用 "CTRL-V CTRL-M" 而不是字面上的 ^M
#每行末尾增加A
:%s/.*\S.*$/&A/g
:%s/.*\S.*$/&A/g

#删除包含特定字符的行数据
:g/testdelstr/d

#全局替换不可见字符为A
:'<,'>s/\s/A/g

#向下搜索
/keywords

#向上搜索
?keywords

#向下下一个
Ctrl+n

#向上下一个
Ctrl+N

#取消高亮
:nohl

VIM 翻页方式:
命令模式下：
    向上翻页：Ctrl + f 或者PageUp键
    向下翻页 :  Ctrl + b 或者PageDown键

#mysql user root 
[mysqld] 
skip-grant-tables 
***restart mysql 
mysql 
USE mysql ;
UPDATE user SET Password = password ( 'new-password' ) WHERE User = 'root' ; 


[github]
#Fetching a remote
#for more information click link "https://help.github.com/articles/fetching-a-remote/"
##git clone a repo
git clone https://github.com/USERNAME/REPOSITORY.git
#git check your origin push/fetch source
git remote -v
#git add  push/fetch source 
git remote add  (push/fetch name) (git@github.com:username/repo.git)
#git check your origin push/fetch source again
git remote -v
#git fetch remote source code 
git fetch (push/fetch name)
#merge the code 
git merge (push/fetch name)/master 
#git push code (your repo)
git push  

#git 获取代码  不包含.git
gti archive -format zip -output  master.zip master 


[apache traffic server]
Via code 
traffic_line -s  proxy.config.http.insert_request_via_str -v 1
traffic_line -s  proxy.config.http.insert_response_via_str -v 2
traffic_line -x

配置ats在源服务器没有定义缓存的情况缓存文件
traffic_line -s proxy.config.http.cache.required_headers -v 0
traffic_line -x


[nginx cache]
proxy_cache:
nginx通过指令proxy_cache_use_stale来控制在文件过期更新过程的回源请求量，让当一个请求在更新文件时，其他请求则暂时使用过期文件。具体配置为proxy_cache_use_stale updating;

cache_purge:




#查看进程精确的时间 进程ID 4435
ps -eo pid,lstart|grep 4435




#转码
iconv  -f  gbk   -t UTF-8   src/gnts_logwatch.cpp      -o  gnts_logwatch.cpp



#ffmpeg 工具使用 将input_file.mp4 文件 从10s 处开始切分出 15 s 的片段 
ffmpeg -ss 00:00:10 -i input_file.mp4 -vcodec copy -acodec copy -t 00:00:15 cool.mp4



#SHELL 批量删除大量小文件
find / -name *.tar.gz  | xargs rm -f


#进程 线程cpu% 调试方法
ps aux  | grep  processname
pstack  pid 
ps  -eLo pid,lwp,pcpu | grep  pid 
可以找出进程中 哪个线程的哪个函数 占用 cpu 较高 
 
//清除linux cached 内存
echo 1 > /proc/sys/vm/drop_caches 

# test from zhoujiafei  rmbp
#
#
#
#ss：查看网络连接的另一种方法
#ss -t 只显示 TCP 连接。ss -u 用于显示 UDP 连接，-l 参数只会显示监听的端口
#所有端口为 22（ssh）的连接
ss state all sport = :ssh
#只想看已建立的 socket（排除了 listening 和 closed ）
ss state connected sport = :ssh
#可以列出指定的 host 或者 ip 段。例如，列出到达 74.125.0.0/16 子网的连接
ss state all dst 74.125.0.0/16


#设置linux 系统时间
date -s "2007-08-03 14:15:00"


#awk对某一列求和
awk '{a+=$1}END{print a}' 


Mac  下 安装ats 找不到openssl 的解决方法
$ cd /usr/local/include
$ ln -s ../opt/openssl/include/openssl .


#获取文件的前N行 
head -100  filename
#获取文件的末尾n 行 
tail -100  filename 或 tail -n 100  filename
#获取文件的中间100-200行
sed -n '100,200p' filename 



iocore/cache/Cache.cc  line:1378
allocating 2695168 directory bytes for a 2147467264 byte volume (0.125504%)

iocore/cache/P_CacheVol.h
 TS_INLINE size_t
 vol_dirlen(Vol *d)
 {
   return vol_headerlen(d) + ROUND_TO_STORE_BLOCK(((size_t)d->buckets) * DIR_DEPTH * d->segments * SIZEOF_DIR) +
          ROUND_TO_STORE_BLOCK(sizeof(VolHeaderFooter));
}


iocore/cache/CacheDir.cc line:1095
dir write buf length 


iocore/cache/CacheDir.cc  ---> SYNC_MAX_WRITE  1212行 写索引逻辑

追踪CPU 占用
strace -c  -T -tt -e trace=all -p 31637

mplayer  fedora29 
 Can't open audio device /dev/dsp: No such file or directory
 fix ===> mknod /dev/dsp c 14 3
          chmod 666 /dev/dsp
 

dig www.baidu.com  +short




