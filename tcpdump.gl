#tcpdump 抓取HTTP 请求
tcpdump -XvvennSs 0 -i eth0 tcp[20:2]=0x4745 or tcp[20:2]=0x4854
0x4745 为"GET"前两个字母"GE"
0x4854 为"HTTP"前两个字母"HT"


tcpdump 是一个很常用的网络包分析工具，可以用来显示通过网络传输到本系统的 TCP/IP 以及其他网络的数据包。tcpdump 使用 libpcap 库来抓取网络报，这个库在几乎在所有的 Linux/Unix 中都有。

tcpdump 可以从网卡或之前创建的数据包文件中读取内容，也可以将包写入文件中以供后续使用。必须是 root 用户或者使用 sudo 特权来运行 tcpdump。

在本文中，我们将会通过一些实例来演示如何使用 tcpdump 命令，但首先让我们来看看在各种 Linux 操作系统中是如何安装 tcpdump 的。

推荐阅读：使用 iftop 命令监控网络带宽
安装

tcpdump 默认在几乎所有的 Linux 发行版中都可用，但若你的 Linux 上没有的话，使用下面方法进行安装。

CentOS/RHEL

使用下面命令在 CentOS 和 RHEL 上安装 tcpdump，


1
$ sudo yum install tcpdump*
Fedora

使用下面命令在 Fedora 上安装 tcpdump：


1
$ dnf install tcpdump
Ubuntu/Debian/Linux Mint

在 Ubuntu/Debain/Linux Mint 上使用下面命令安装 tcpdump：


1
$ apt-get install tcpdump
安装好 tcpdump 后，现在来看一些例子。

案例演示

从所有网卡中捕获数据包

运行下面命令来从所有网卡中捕获数据包：


1
$ tcpdump -i any
从指定网卡中捕获数据包

要从指定网卡中捕获数据包，运行：


1
$ tcpdump -i eth0
将捕获的包写入文件

使用 -w 选项将所有捕获的包写入文件：


1
$ tcpdump -i eth1 -w packets_file
读取之前产生的 tcpdump 文件

使用下面命令从之前创建的 tcpdump 文件中读取内容：


1
$ tcpdump -r packets_file
获取更多的包信息，并且以可读的形式显示时间戳

要获取更多的包信息同时以可读的形式显示时间戳，使用：


1
$ tcpdump -ttttnnvvS
查看整个网络的数据包

要获取整个网络的数据包，在终端执行下面命令：


1
$ tcpdump net 192.168.1.0/24
根据 IP 地址查看报文

要获取指定 IP 的数据包，不管是作为源地址还是目的地址，使用下面命令：


1
$ tcpdump host 192.168.1.100
要指定 IP 地址是源地址或是目的地址则使用：


1
2
$ tcpdump src 192.168.1.100
$ tcpdump dst 192.168.1.100
查看某个协议或端口号的数据包

要查看某个协议的数据包，运行下面命令：


1
$ tcpdump ssh
要捕获某个端口或一个范围的数据包，使用：


1
2
$ tcpdump port 22
$ tcpdump portrange 22-125
我们也可以与 src 和 dst 选项连用来捕获指定源端口或指定目的端口的报文。

我们还可以使用“与” （and，&&）、“或” （or，|| ) 和“非”（not，!） 来将两个条件组合起来。当我们需要基于某些条件来分析网络报文是非常有用。

使用“与”

可以使用 and 或者符号 && 来将两个或多个条件组合起来。比如：


1
$ tcpdump src 192.168.1.100 && port 22 -w ssh_packets
使用“或”

“或”会检查是否匹配命令所列条件中的其中一条，像这样：


1
2
$ tcpdump src 192.168.1.100 or dst 192.168.1.50 && port 22 -w ssh_packets
$ tcpdump port 443 or 80 -w http_packets
使用“非”

当我们想表达不匹配某项条件时可以使用“非”，像这样：


1
$ tcpdump -i eth0 src port not 22
这会捕获 eth0 上除了 22 号端口的所有通讯。





tcpdump -D
列出可以抓包的网络接口


tcpdump -i eth0 
对某个接口进行抓包

-c 限制 tcpdump 抓包的数量
用 -n 选项显示 IP 地址，-nn 选项显示端口号

tcpdump -i any -c5 -nn host 54.204.39.132
只抓取和显示与 54.204.39.132 有关的数据包

tcpdump -i any -c5 -nn port 80
抓取和 HTTP 服务相关的数据包


tcpdump -i any -c5 -nn src 192.168.122.98
抓取源 IP 地址为 192.168.122.98 的数据包

tcpdump -i any -c5 -nn dst 192.168.122.98
使用 dst 就是按目的 IP/主机名来筛选数据包

tcpdump -i any -c5 -nn src 192.168.122.98 and port 80
筛选来自源 IP 地址 192.168.122.98 的 HTTP 数据包

tcpdump -i any -c5 -nn "port 80 and (src 192.168.122.98 or src 54.204.39.132)"
我们只抓取了来自源 IP 为 192.168.122.98 或者 54.204.39.132 的 HTTP （端口号80）的数据包。使用该方法就很容易抓取到数据流中交互双方的数据包).

 tcpdump -i any -c10 -nn -A port 80
 tcpdump 提供了两个选项可以查看数据包内容，-X 以十六进制打印出数据报文内容，-A 打印数据报文的 ASCII 值

 tcpdump -i any -c10 -nn -w webserver.pcap port 80
-w 选项来保存数据包而不是在屏幕上显示出抓取的数据包

tcpdump -nn -r webserver.pcap
tcpdump 将数据包保存在二进制文件中，所以不能简单的用文本编辑器去打开它。使用 -r 选项参数来阅读该文件中的报文内容.

tcpdump -nn -r webserver.pcap src 54.204.39.132
你还可以使用我们讨论过的任何过滤规则来过滤文件中的内容，就像使用实时数据一样。 例如，通过执行以下命令从源 IP 地址 54.204.39.132 检查文件中的数据包

